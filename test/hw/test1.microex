%%%
This file will test all token in MicroEx scanner.
And this is multi-line comment I define in MicroEx.
%%%
%% This is singal-line comment define by requirement.

%% default token:
begin
end
read
write
id
123456 %% integer_literal
102.2 %% float_literal
12. %% float_literal
.651 %% float_literal
12.3e-3 %% exp_float_literal
.3E3 %% exp_float_literal
12.e+3 %% exp_float_literal
"text" %% string_literal
"text\"" %% string_literal
"\'" %% string_literal
( %% left_parent
) %% right_parent
; %% semicolon
, %% comma
:= %% assign
+ %% plus
- %% minus
* %% multiply
/ %% division
!= %% not_equal
== %% equal
> %% great
< %% less
>= %% great_equal
<= %% less_equal
if
then
else
endif
for
to
endfor
while
endwhile
declare
as
integer
real

%% new token:
0xabc431 %% hex_integer_literal
0o010547 %% ord_integer_literal
0b10010 %% bit_integer_literal
'a' %% char_literal
'\n' %% char_literal
'\"' %% char_literal
'\'' %% char_literal

char
string 
r"text\ntext" %% r_string_literal
import

true
false
boolean

&
|
^
!
&=
|=
^=

&&
||

%
**

<<
>>
+=
-=
*=
/=
%=
<<=
>>=
**=

class
endclass
extends
implements
public
private
protect
static
final
this
super
abstract
interface
endinterface
. %% dot, for access class member or package path

fn %% function
return
void %% return type for null
endfn

null

switch
case
default
endswitch

break
continue

oper %% operator overload
endoper