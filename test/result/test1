Token number =   1,	token is `begin              `,	value is `begin`
Token number =   2,	token is `end                `,	value is `end`
Token number =   3,	token is `read               `,	value is `read`
Token number =   4,	token is `write              `,	value is `write`
Token number =   5,	token is `id                 `,	value is `id`
Token number =   6,	token is `integer_literal    `,	value is `123456`
Token number =   7,	token is `float_literal      `,	value is `102.2`
Token number =   7,	token is `float_literal      `,	value is `12.`
Token number =   7,	token is `float_literal      `,	value is `.651`
Token number =   8,	token is `exp_float_literal  `,	value is `12.3e-3`
Token number =   8,	token is `exp_float_literal  `,	value is `.3E3`
Token number =   8,	token is `exp_float_literal  `,	value is `12.e+3`
Token number =   9,	token is `string_literal     `,	value is `"text"`
Token number =   9,	token is `string_literal     `,	value is `"text\""`
Token number =   9,	token is `string_literal     `,	value is `"\'"`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  13,	token is `comma              `,	value is `,`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =  15,	token is `plus               `,	value is `+`
Token number =  16,	token is `minus              `,	value is `-`
Token number =  17,	token is `multiply           `,	value is `*`
Token number =  18,	token is `division           `,	value is `/`
Token number =  19,	token is `not_equal          `,	value is `!=`
Token number =  24,	token is `equal              `,	value is `==`
Token number =  20,	token is `great              `,	value is `>`
Token number =  21,	token is `less               `,	value is `<`
Token number =  22,	token is `great_equal        `,	value is `>=`
Token number =  23,	token is `less_equal         `,	value is `<=`
Token number =  25,	token is `if                 `,	value is `if`
Token number =  26,	token is `then               `,	value is `then`
Token number =  27,	token is `else               `,	value is `else`
Token number =  28,	token is `endif              `,	value is `endif`
Token number =  29,	token is `for                `,	value is `for`
Token number =  30,	token is `to                 `,	value is `to`
Token number =  31,	token is `endfor             `,	value is `endfor`
Token number =  32,	token is `while              `,	value is `while`
Token number =  33,	token is `endwhile           `,	value is `endwhile`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  36,	token is `integer            `,	value is `integer`
Token number =  37,	token is `real               `,	value is `real`
Token number =  39,	token is `hex_integer_literal`,	value is `0xabc431`
Token number =  40,	token is `ord_integer_literal`,	value is `0o010547`
Token number =  41,	token is `bit_integer_literal`,	value is `0b10010`
Token number =  42,	token is `char_literal       `,	value is `'a'`
Token number =  42,	token is `char_literal       `,	value is `'\n'`
Token number =  42,	token is `char_literal       `,	value is `'\"'`
Token number =  42,	token is `char_literal       `,	value is `'\''`
Token number =  43,	token is `char               `,	value is `char`
Token number =  44,	token is `r_string_literal   `,	value is `r"text\ntext"`
Token number =  46,	token is `import             `,	value is `import`
Token number =  48,	token is `true               `,	value is `true`
Token number =  49,	token is `false              `,	value is `false`
Token number =  47,	token is `boolean            `,	value is `boolean`
Token number =  50,	token is `binary_and         `,	value is `&`
Token number =  51,	token is `binary_or          `,	value is `|`
Token number =  52,	token is `binary_xor         `,	value is `^`
Token number =  53,	token is `binary_boolean_not `,	value is `!`
Token number =  54,	token is `binary_and_equal   `,	value is `&=`
Token number =  55,	token is `binary_or_equal    `,	value is `|=`
Token number =  56,	token is `binary_xor_equal   `,	value is `^=`
Token number =  57,	token is `boolean_and        `,	value is `&&`
Token number =  58,	token is `boolean_or         `,	value is `||`
Token number =  59,	token is `mod                `,	value is `%`
Token number =  60,	token is `power              `,	value is `**`
Token number =  61,	token is `left_shift         `,	value is `<<`
Token number =  62,	token is `right_shift        `,	value is `>>`
Token number =  63,	token is `plus_equal         `,	value is `+=`
Token number =  64,	token is `minus_equal        `,	value is `-=`
Token number =  65,	token is `multiply_equal     `,	value is `*=`
Token number =  66,	token is `division_equal     `,	value is `/=`
Token number =  67,	token is `mod_equal          `,	value is `%=`
Token number =  68,	token is `left_shift_equal   `,	value is `<<=`
Token number =  69,	token is `right_shift_equal  `,	value is `>>=`
Token number =  70,	token is `power_equal        `,	value is `**=`
Token number =  71,	token is `class              `,	value is `class`
Token number =  72,	token is `endclass           `,	value is `endclass`
Token number =  73,	token is `extends            `,	value is `extends`
Token number =  74,	token is `implements         `,	value is `implements`
Token number =  75,	token is `public             `,	value is `public`
Token number =  76,	token is `private            `,	value is `private`
Token number =  77,	token is `protect            `,	value is `protect`
Token number =  78,	token is `static             `,	value is `static`
Token number =  79,	token is `final              `,	value is `final`
Token number =  80,	token is `this               `,	value is `this`
Token number =  81,	token is `super              `,	value is `super`
Token number =  82,	token is `abstract           `,	value is `abstract`
Token number =  83,	token is `interface          `,	value is `interface`
Token number =  84,	token is `endinterface       `,	value is `endinterface`
Token number =  85,	token is `dot                `,	value is `.`
Token number =  86,	token is `fn                 `,	value is `fn`
Token number =  87,	token is `return             `,	value is `return`
Token number =  88,	token is `void               `,	value is `void`
Token number =  89,	token is `endfn              `,	value is `endfn`
Token number =  90,	token is `null               `,	value is `null`
Token number =  91,	token is `switch             `,	value is `switch`
Token number =  92,	token is `case               `,	value is `case`
Token number =  93,	token is `default            `,	value is `default`
Token number =  94,	token is `endswitch          `,	value is `endswitch`
Token number =  95,	token is `break              `,	value is `break`
Token number =  96,	token is `continue           `,	value is `continue`
Token number =  97,	token is `oper               `,	value is `oper`
Token number =  98,	token is `endoper            `,	value is `endoper`
Token number =  38,	token is `EOF                `,	value is `EOF`
