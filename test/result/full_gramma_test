Token number =   1,	token is `begin              `,	value is `begin`
Token number =  46,	token is `import             `,	value is `import`
Token number =   5,	token is `id                 `,	value is `exr_lex_test_data`
Token number =  85,	token is `dot                `,	value is `.`
Token number =   5,	token is `id                 `,	value is `PI`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  36,	token is `integer            `,	value is `integer`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `example_float`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  37,	token is `real               `,	value is `real`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `example_char`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  43,	token is `char               `,	value is `char`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `example_string`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  45,	token is `string             `,	value is `string`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `example_bool`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  47,	token is `boolean            `,	value is `boolean`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `example_int_array`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `100`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  36,	token is `integer            `,	value is `integer`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   6,	token is `integer_literal    `,	value is `1000000`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   6,	token is `integer_literal    `,	value is `1_000_000`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =  39,	token is `hex_integer_literal`,	value is `0x0abc`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =  40,	token is `ord_integer_literal`,	value is `0o0745`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =  41,	token is `bit_integer_literal`,	value is `0b0100`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_float`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   7,	token is `float_literal      `,	value is `0.1`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_float`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   7,	token is `float_literal      `,	value is `.1`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_float`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   7,	token is `float_literal      `,	value is `1.0`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_float`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   7,	token is `float_literal      `,	value is `1.`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_float`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   7,	token is `float_literal      `,	value is `1_00.`
Token number =   5,	token is `id                 `,	value is `example_float`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   7,	token is `float_literal      `,	value is `.00_100_1`
Token number =   5,	token is `id                 `,	value is `example_float`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   8,	token is `exp_float_literal  `,	value is `314.16e-2`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_char`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =  42,	token is `char_literal       `,	value is `'a'`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_char`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =  42,	token is `char_literal       `,	value is `'\n'`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_string`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   9,	token is `string_literal     `,	value is `"string"`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_string`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   9,	token is `string_literal     `,	value is `"string\n\'\"\t\b\\"`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_string`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =  44,	token is `r_string_literal   `,	value is `r"string\n"`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_bool`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =  48,	token is `true               `,	value is `true`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_int_array`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `0`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   6,	token is `integer_literal    `,	value is `1`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   3,	token is `read               `,	value is `read`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `example_string`
Token number =  13,	token is `comma              `,	value is `,`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   4,	token is `write              `,	value is `write`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `example_bool`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  25,	token is `if                 `,	value is `if`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `example_bool`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  26,	token is `then               `,	value is `then`
Token number =   5,	token is `id                 `,	value is `example_char`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =  42,	token is `char_literal       `,	value is `'A'`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  28,	token is `endif              `,	value is `endif`
Token number =  25,	token is `if                 `,	value is `if`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `example_bool`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  26,	token is `then               `,	value is `then`
Token number =   5,	token is `id                 `,	value is `example_int_array`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `0`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   6,	token is `integer_literal    `,	value is `1`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_int_array`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `1`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   6,	token is `integer_literal    `,	value is `2`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  27,	token is `else               `,	value is `else`
Token number =   5,	token is `id                 `,	value is `example_int_array`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `0`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   6,	token is `integer_literal    `,	value is `0`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `example_int_array`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `1`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   6,	token is `integer_literal    `,	value is `1`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  28,	token is `endif              `,	value is `endif`
Token number =  29,	token is `for                `,	value is `for`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   6,	token is `integer_literal    `,	value is `0`
Token number =  30,	token is `to                 `,	value is `to`
Token number =   6,	token is `integer_literal    `,	value is `99`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =   5,	token is `id                 `,	value is `example_int_array`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  31,	token is `endfor             `,	value is `endfor`
Token number =  32,	token is `while              `,	value is `while`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `example_bool`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =   5,	token is `id                 `,	value is `example_bool`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =  49,	token is `false              `,	value is `false`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  33,	token is `endwhile           `,	value is `endwhile`
Token number =  86,	token is `fn                 `,	value is `fn`
Token number =  88,	token is `void               `,	value is `void`
Token number =   5,	token is `id                 `,	value is `print`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =  36,	token is `integer            `,	value is `integer`
Token number =   5,	token is `id                 `,	value is `a`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =   4,	token is `write              `,	value is `write`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `a`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  87,	token is `return             `,	value is `return`
Token number =  90,	token is `null               `,	value is `null`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  89,	token is `endfn              `,	value is `endfn`
Token number =  86,	token is `fn                 `,	value is `fn`
Token number =  45,	token is `string             `,	value is `string`
Token number =   5,	token is `id                 `,	value is `strcat`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =  45,	token is `string             `,	value is `string`
Token number =   5,	token is `id                 `,	value is `a`
Token number =  13,	token is `comma              `,	value is `,`
Token number =  45,	token is `string             `,	value is `string`
Token number =   5,	token is `id                 `,	value is `b`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `c`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  45,	token is `string             `,	value is `string`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `c`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   5,	token is `id                 `,	value is `a`
Token number =  15,	token is `plus               `,	value is `+`
Token number =   5,	token is `id                 `,	value is `b`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  87,	token is `return             `,	value is `return`
Token number =   5,	token is `id                 `,	value is `c`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  89,	token is `endfn              `,	value is `endfn`
Token number =   5,	token is `id                 `,	value is `print`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   4,	token is `write              `,	value is `write`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `strcat`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `example_string`
Token number =  13,	token is `comma              `,	value is `,`
Token number =   9,	token is `string_literal     `,	value is `"hello, world"`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  91,	token is `switch             `,	value is `switch`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `example_char`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  92,	token is `case               `,	value is `case`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `0`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =   5,	token is `id                 `,	value is `example_bool`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   5,	token is `id                 `,	value is `example_int_array`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `0`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  24,	token is `equal              `,	value is `==`
Token number =   6,	token is `integer_literal    `,	value is `0`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  95,	token is `break              `,	value is `break`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  92,	token is `case               `,	value is `case`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `1`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  92,	token is `case               `,	value is `case`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `2`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =   5,	token is `id                 `,	value is `example_bool`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   5,	token is `id                 `,	value is `example_int_array`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `0`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  24,	token is `equal              `,	value is `==`
Token number =   6,	token is `integer_literal    `,	value is `1`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  93,	token is `default            `,	value is `default`
Token number =   5,	token is `id                 `,	value is `example_int_array`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `0`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   6,	token is `integer_literal    `,	value is `666`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  95,	token is `break              `,	value is `break`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  94,	token is `endswitch          `,	value is `endswitch`
Token number =  97,	token is `oper               `,	value is `oper`
Token number =  17,	token is `multiply           `,	value is `*`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =  45,	token is `string             `,	value is `string`
Token number =   5,	token is `id                 `,	value is `a`
Token number =  13,	token is `comma              `,	value is `,`
Token number =  36,	token is `integer            `,	value is `integer`
Token number =   5,	token is `id                 `,	value is `b`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `c`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  45,	token is `string             `,	value is `string`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `i`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  36,	token is `integer            `,	value is `integer`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `c`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   5,	token is `id                 `,	value is `a`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  29,	token is `for                `,	value is `for`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `i`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   6,	token is `integer_literal    `,	value is `1`
Token number =  30,	token is `to                 `,	value is `to`
Token number =   5,	token is `id                 `,	value is `b`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =   5,	token is `id                 `,	value is `c`
Token number =  63,	token is `plus_equal         `,	value is `+=`
Token number =   5,	token is `id                 `,	value is `a`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  31,	token is `endfor             `,	value is `endfor`
Token number =  87,	token is `return             `,	value is `return`
Token number =   5,	token is `id                 `,	value is `c`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  98,	token is `endoper            `,	value is `endoper`
Token number =   5,	token is `id                 `,	value is `example_string`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   5,	token is `id                 `,	value is `example_string`
Token number =  17,	token is `multiply           `,	value is `*`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  71,	token is `class              `,	value is `class`
Token number =   5,	token is `id                 `,	value is `Object`
Token number =  75,	token is `public             `,	value is `public`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `int_value`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  36,	token is `integer            `,	value is `integer`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  75,	token is `public             `,	value is `public`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `float_value`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  37,	token is `real               `,	value is `real`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  77,	token is `protect            `,	value is `protect`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `string_value`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  45,	token is `string             `,	value is `string`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  76,	token is `private            `,	value is `private`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `char_value`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  43,	token is `char               `,	value is `char`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  78,	token is `static             `,	value is `static`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `static_int_value`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  36,	token is `integer            `,	value is `integer`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  79,	token is `final              `,	value is `final`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `final_float_value`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  37,	token is `real               `,	value is `real`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  75,	token is `public             `,	value is `public`
Token number =  78,	token is `static             `,	value is `static`
Token number =  86,	token is `fn                 `,	value is `fn`
Token number =   5,	token is `id                 `,	value is `Object`
Token number =   5,	token is `id                 `,	value is `Object`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =  36,	token is `integer            `,	value is `integer`
Token number =   5,	token is `id                 `,	value is `int_value`
Token number =  13,	token is `comma              `,	value is `,`
Token number =  37,	token is `real               `,	value is `real`
Token number =   5,	token is `id                 `,	value is `f`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  80,	token is `this               `,	value is `this`
Token number =  85,	token is `dot                `,	value is `.`
Token number =   5,	token is `id                 `,	value is `int_value`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   5,	token is `id                 `,	value is `int_value`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  80,	token is `this               `,	value is `this`
Token number =  85,	token is `dot                `,	value is `.`
Token number =   5,	token is `id                 `,	value is `final_float_value`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   5,	token is `id                 `,	value is `f`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  87,	token is `return             `,	value is `return`
Token number =  80,	token is `this               `,	value is `this`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  89,	token is `endfn              `,	value is `endfn`
Token number =  75,	token is `public             `,	value is `public`
Token number =  86,	token is `fn                 `,	value is `fn`
Token number =  88,	token is `void               `,	value is `void`
Token number =   5,	token is `id                 `,	value is `hi`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =   4,	token is `write              `,	value is `write`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   9,	token is `string_literal     `,	value is `"hi, "`
Token number =  15,	token is `plus               `,	value is `+`
Token number =  80,	token is `this               `,	value is `this`
Token number =  85,	token is `dot                `,	value is `.`
Token number =   5,	token is `id                 `,	value is `string_value`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  87,	token is `return             `,	value is `return`
Token number =  90,	token is `null               `,	value is `null`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  89,	token is `endfn              `,	value is `endfn`
Token number =  72,	token is `endclass           `,	value is `endclass`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `obj`
Token number =  35,	token is `as                 `,	value is `as`
Token number =   5,	token is `id                 `,	value is `Object`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `obj`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   5,	token is `id                 `,	value is `Object`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  13,	token is `comma              `,	value is `,`
Token number =   5,	token is `id                 `,	value is `PI`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `print`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `Object`
Token number =  85,	token is `dot                `,	value is `.`
Token number =   5,	token is `id                 `,	value is `static_int_value`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `print`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `obj`
Token number =  85,	token is `dot                `,	value is `.`
Token number =   5,	token is `id                 `,	value is `int_value`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  71,	token is `class              `,	value is `class`
Token number =  82,	token is `abstract           `,	value is `abstract`
Token number =   5,	token is `id                 `,	value is `A`
Token number =  73,	token is `extends            `,	value is `extends`
Token number =   5,	token is `id                 `,	value is `Object`
Token number =  82,	token is `abstract           `,	value is `abstract`
Token number =  86,	token is `fn                 `,	value is `fn`
Token number =  88,	token is `void               `,	value is `void`
Token number =   5,	token is `id                 `,	value is `abc_method`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  89,	token is `endfn              `,	value is `endfn`
Token number =  72,	token is `endclass           `,	value is `endclass`
Token number =  71,	token is `class              `,	value is `class`
Token number =   5,	token is `id                 `,	value is `B`
Token number =  73,	token is `extends            `,	value is `extends`
Token number =   5,	token is `id                 `,	value is `A`
Token number =  86,	token is `fn                 `,	value is `fn`
Token number =  88,	token is `void               `,	value is `void`
Token number =   5,	token is `id                 `,	value is `abc_method`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =   4,	token is `write              `,	value is `write`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   9,	token is `string_literal     `,	value is `"a abc method implements"`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  87,	token is `return             `,	value is `return`
Token number =  90,	token is `null               `,	value is `null`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  89,	token is `endfn              `,	value is `endfn`
Token number =  72,	token is `endclass           `,	value is `endclass`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `b`
Token number =  35,	token is `as                 `,	value is `as`
Token number =   5,	token is `id                 `,	value is `B`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `b`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   5,	token is `id                 `,	value is `B`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `example_int`
Token number =  13,	token is `comma              `,	value is `,`
Token number =   7,	token is `float_literal      `,	value is `2.6`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  83,	token is `interface          `,	value is `interface`
Token number =   5,	token is `id                 `,	value is `Person`
Token number =  75,	token is `public             `,	value is `public`
Token number =  86,	token is `fn                 `,	value is `fn`
Token number =  45,	token is `string             `,	value is `string`
Token number =   5,	token is `id                 `,	value is `greet`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =  45,	token is `string             `,	value is `string`
Token number =   5,	token is `id                 `,	value is `name`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  89,	token is `endfn              `,	value is `endfn`
Token number =  76,	token is `private            `,	value is `private`
Token number =  86,	token is `fn                 `,	value is `fn`
Token number =  45,	token is `string             `,	value is `string`
Token number =   5,	token is `id                 `,	value is `mutter`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `Person`
Token number =   5,	token is `id                 `,	value is `p`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  89,	token is `endfn              `,	value is `endfn`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `o`
Token number =  35,	token is `as                 `,	value is `as`
Token number =   5,	token is `id                 `,	value is `Object`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  84,	token is `endinterface       `,	value is `endinterface`
Token number =  71,	token is `class              `,	value is `class`
Token number =   5,	token is `id                 `,	value is `Human`
Token number =  73,	token is `extends            `,	value is `extends`
Token number =   5,	token is `id                 `,	value is `B`
Token number =  74,	token is `implements         `,	value is `implements`
Token number =   5,	token is `id                 `,	value is `Person`
Token number =  75,	token is `public             `,	value is `public`
Token number =  86,	token is `fn                 `,	value is `fn`
Token number =  45,	token is `string             `,	value is `string`
Token number =   5,	token is `id                 `,	value is `greet`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =  45,	token is `string             `,	value is `string`
Token number =   5,	token is `id                 `,	value is `name`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  87,	token is `return             `,	value is `return`
Token number =   9,	token is `string_literal     `,	value is `"hi, "`
Token number =  15,	token is `plus               `,	value is `+`
Token number =   5,	token is `id                 `,	value is `name`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  89,	token is `endfn              `,	value is `endfn`
Token number =  76,	token is `private            `,	value is `private`
Token number =  86,	token is `fn                 `,	value is `fn`
Token number =  45,	token is `string             `,	value is `string`
Token number =   5,	token is `id                 `,	value is `mutter`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `Person`
Token number =   5,	token is `id                 `,	value is `p`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  87,	token is `return             `,	value is `return`
Token number =   5,	token is `id                 `,	value is `p`
Token number =  85,	token is `dot                `,	value is `.`
Token number =   5,	token is `id                 `,	value is `greet`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =  80,	token is `this               `,	value is `this`
Token number =  85,	token is `dot                `,	value is `.`
Token number =   5,	token is `id                 `,	value is `string_value`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  15,	token is `plus               `,	value is `+`
Token number =   9,	token is `string_literal     `,	value is `" wtf?"`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  89,	token is `endfn              `,	value is `endfn`
Token number =  72,	token is `endclass           `,	value is `endclass`
Token number =   2,	token is `end                `,	value is `end`
Token number =  38,	token is `EOF                `,	value is `EOF`
