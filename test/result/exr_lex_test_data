Token number =   1,	token is `begin              `,	value is `begin`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `A`
Token number =  13,	token is `comma              `,	value is `,`
Token number =   5,	token is `id                 `,	value is `I`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  36,	token is `integer            `,	value is `integer`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `B`
Token number =  13,	token is `comma              `,	value is `,`
Token number =   5,	token is `id                 `,	value is `C`
Token number =  13,	token is `comma              `,	value is `,`
Token number =   5,	token is `id                 `,	value is `D`
Token number =  13,	token is `comma              `,	value is `,`
Token number =   5,	token is `id                 `,	value is `size`
Token number =  35,	token is `as                 `,	value is `as`
Token number =  37,	token is `real               `,	value is `real`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `PI`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  34,	token is `declare            `,	value is `declare`
Token number =   5,	token is `id                 `,	value is `LLL`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   6,	token is `integer_literal    `,	value is `100`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  35,	token is `as                 `,	value is `AS`
Token number =  37,	token is `real               `,	value is `REAL`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `PI`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   7,	token is `float_literal      `,	value is `3.1416`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =   5,	token is `id                 `,	value is `B`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   5,	token is `id                 `,	value is `PI`
Token number =  17,	token is `multiply           `,	value is `*`
Token number =   5,	token is `id                 `,	value is `B`
Token number =  17,	token is `multiply           `,	value is `*`
Token number =   5,	token is `id                 `,	value is `B`
Token number =  15,	token is `plus               `,	value is `+`
Token number =   5,	token is `id                 `,	value is `C`
Token number =  18,	token is `division           `,	value is `/`
Token number =   5,	token is `id                 `,	value is `D`
Token number =  15,	token is `plus               `,	value is `+`
Token number =   8,	token is `exp_float_literal  `,	value is `0.345E-6`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  29,	token is `for                `,	value is `FOR`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `I`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   6,	token is `integer_literal    `,	value is `1`
Token number =  30,	token is `to                 `,	value is `TO`
Token number =   6,	token is `integer_literal    `,	value is `100`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =   5,	token is `id                 `,	value is `C`
Token number =  14,	token is `assign             `,	value is `:=`
Token number =   5,	token is `id                 `,	value is `LLL`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `I`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  15,	token is `plus               `,	value is `+`
Token number =   5,	token is `id                 `,	value is `B`
Token number =  17,	token is `multiply           `,	value is `*`
Token number =   5,	token is `id                 `,	value is `D`
Token number =  16,	token is `minus              `,	value is `-`
Token number =   5,	token is `id                 `,	value is `C`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  31,	token is `endfor             `,	value is `ENDFOR`
Token number =  25,	token is `if                 `,	value is `IF`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   5,	token is `id                 `,	value is `C`
Token number =  22,	token is `great_equal        `,	value is `>=`
Token number =   6,	token is `integer_literal    `,	value is `10000`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  26,	token is `then               `,	value is `THEN`
Token number =   5,	token is `id                 `,	value is `print`
Token number =  10,	token is `left_parent        `,	value is `(`
Token number =   9,	token is `string_literal     `,	value is `"Good!"`
Token number =  11,	token is `right_parent       `,	value is `)`
Token number =  12,	token is `semicolon          `,	value is `;`
Token number =  28,	token is `endif              `,	value is `ENDIF`
Token number =   2,	token is `end                `,	value is `end`
Token number =  38,	token is `EOF                `,	value is `EOF`
