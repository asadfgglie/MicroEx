%%%
 %% Example of function call
%%%
program function_test

begin
    fn integer add(integer a, integer b)
        return a + b;
    fnend

    fn real f(integer c1, integer x, integer c2)
        declare tmp as real; %% declare local variable, only can be used in `f`
        %% local variable name can same as global variable, but it will shadow global variable
        tmp := c1 * x;
        tmp := tmp + c2;
        return tmp;
    fnend

    declare c, d, e as integer; %% all variables not declare in function are global variable
    c := 10;
    d := 20;
    e := add(c, d);
    declare y as real;
    y := f(c, d, e);

    fn real test_global()
        %% function can access global variable, but variable should declare before function declaration
        %% function only can access global variable s.t. declare before function declaration
        return y;
    fnend

    declare a, b as integer;
    a := 1;
    b := 2;
    c := add(a + b, a * b) * (a + b);

    fn integer test_local()
        declare c as integer; %% shadow global variable
        c := -1;
        return c;
    fnend

    declare boolean_var as bool;
    boolean_var := c == test_local();

    declare arr1[2][3] as integer;

    fn integer test_array(integer arr[2][3])
        declare a1, a2 as integer;
        a1 := arr[0][0] + arr[0][1] + arr[0][2];
        a2 := arr[1][0] + arr[1][1] + arr[1][2];
        return a1 * a2;
    fnend

    y := test_array(arr1);
end